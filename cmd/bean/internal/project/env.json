{
    "packagePath": "{{ .PkgPath }}",
    "projectName": "{{ .PkgName }}",
    "environment": "local",
    "secret": "{{ .Secret }}",
    "debugLogPath": "",
    "accessLog": {
        "on": true,
        "bodyDump": true,
        "path":"",
        "bodyDumpMaskParam": [],
        "reqHeaderParam": [],
        "skipEndpoints": ["/metrics"]
    },
    "prometheus": {
        "on": false,
        "skipEndpoints": ["/ping", "/route/stats"],
        "subsystem": ""
    },
    "http": {
        "port": "8888",
        "host": "0.0.0.0",
        "bodyLimit": "1M",
        "isHttpsRedirect": false,
        "timeout": "24s",
        "errorMessage": {
            "e404": {
                "json": [
                    {
                        "key": "errorCode",
                        "value": "100003"
                    },
                    {
                        "key": "errorMsg",
                        "value": "page not found"
                    }
                ],
                "html": {
                    "file": "errors/html/404"
                }
            },
            "e405": {
                "json": [
                    {
                        "key": "errorCode",
                        "value": "100006"
                    },
                    {
                        "key": "errorMsg",
                        "value": "method not allowed"
                    }
                ],
                "html": {
                    "file": "errors/html/405"
                }
            },
            "e500": {
                "json": [
                    {
                        "key": "errorCode",
                        "value": "100004"
                    },
                    {
                        "key": "errorMsg",
                        "value": "internal server error"
                    }
                ],
                "html": {
                    "file": "errors/html/500"
                }
            },
            "e504": {
                "json": [
                    {
                        "key": "errorCode",
                        "value": "100099"
                    },
                    {
                        "key": "errorMsg",
                        "value": "gateway timeout"
                    }
                ],
                "html": {
                    "file": "errors/html/504"
                }
            },
            "default": {
                "json": [
                    {
                        "key": "errorCode",
                        "value": "100004"
                    },
                    {
                        "key": "errorMsg",
                        "value": "internal server error"
                    }
                ],
                "html": {
                    "file": "errors/html/500"
                }
            }
        },
        "keepAlive": true,
        "allowedMethod": ["DELETE", "GET", "POST", "PUT"],
        "ssl": {
            "on": false,
            "certFile": "",
            "privFile": "",
            "minTLSVersion": 1
        },
        "shutdownTimeout": "30s"
    },
    "netHttpFastTransporter": {
        "on": true,
        "maxIdleConns": 1024,
		"maxIdleConnsPerHost": 0,
		"maxConnsPerHost": 100,
		"idleConnTimeout": "10s",
		"dnsCacheTimeout": "300s"
    },
    "html": {
        "viewsTemplateCache": false
    },
    "database": {
        "tenant": {
            "on": false
        },
        "mysql": {
            "master":{
                "database": "",
                "username": "",
                "password": "",
                "host": "127.0.0.1",
                "port": "3306"
            },
            "maxIdleConnections": 20,
            "maxOpenConnections": 30,
            "maxConnectionLifeTime": "300s",
            "maxIdleConnectionLifeTime": "180s",
            "debug": true
        },
        "mongo": {
            "master": {
                "database": "",
                "username": "",
                "password": "",
                "host": "127.0.0.1",
                "port": "27017"
            },
            "connectTimeout": "10s",
            "maxConnectionPoolSize": 200,
            "minConnectionPoolSize": 10,
            "maxConnectionLifeTime": "300s",
            "debug": false
        },
        "redis": {
            "master": {
                "database": 0,
                "password": "",
                "host": "127.0.0.1",
                "port": "6379",
                "read": []
            },
            "prefix": "{{ .PkgName }}_cache",
            "maxretries": 2,
            "poolsize": 30,
            "minIdleConnections": 10,
            "dialTimeout": "5s",
            "readTimeout": "3s",
            "writeTimeout": "3s",
            "poolTimeout": "4s"
        },
        "memory": {
            "on": true,
            "delKeyAPI": {
                "endPoint": "/memory/key/:key",
                "authBearerToken": "{{ .BearerToken }}"
            }
        }
    },
    "queue": {
        "redis": {
            "password": "64vc7632-62dc-482e-67fg-046c7faec493",
            "host": "127.0.0.1",
            "port": "6379",
            "name": 3,
            "prefix": "{{ .PkgName }}_queue",
            "poolsize": 100,
            "maxidle": 2
        },
        "health": {
            "port": "7777",
            "host": "0.0.0.0"
        }
    },
    "jwt": {
        "expiration": "86400s",
        "secret": "{{ .JWTSecret }}"
    },
    "sentry": {
        "on": false,
        "debug": false,
        "dsn": "",
        "timeout": "5s",
        "tracesSampleRate": 0.2,
        "skipTracesEndpoints": ["/ping","^/$","/metrics"]
    },
    "security": {
        "http": {
            "header": {
                "xssProtection": "1; mode=block",
                "contentTypeNosniff": "nosniff",
                "xFrameOptions": "SAMEORIGIN",
                "hstsMaxAge": 31536000,
                "contentSecurityPolicy": ""
            }
        }
    },
    "asyncPool": [
        {
            "name": "default_pool",
            "size": 10,
            "blockAfter": 10000
        }
    ],
    "asyncPoolReleaseTimeout": "25s"
}